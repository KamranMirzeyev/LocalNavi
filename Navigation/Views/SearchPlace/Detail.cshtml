
@{
    ViewBag.Title = "Detail";
}
@using System.Globalization
@model Navigation.Models.vwDetails
<!--============================= BOOKING =============================-->

<div>
    <!-- Swiper -->
    <div class="swiper-container">
        <div class="swiper-wrapper">
            @foreach (var photo in Model.Listing.Photos)
            {
                if (photo != null)
                {
                    <div class="swiper-slide">
                        <a href="/Public/images/PlacePhoto/@photo.PlacePhoto" class="grid image-link">
                            <img src="/Public/images/PlacePhoto/@photo.PlacePhoto" class="img-fluid" alt="@photo.PlacePhoto">
                        </a>
                    </div>
                }


            }


        </div>
        <!-- Add Pagination -->
        <div class="swiper-pagination swiper-pagination-white"></div>
        <!-- Add Arrows -->
        <div class="swiper-button-next swiper-button-white"></div>
        <div class="swiper-button-prev swiper-button-white"></div>
    </div>
</div>
<!--//END BOOKING -->
<!--============================= RESERVE A SEAT =============================-->

<section class="reserve-block">
    <div class="container">
        <div class="row">
            <div class="col-md-6">
                <h5 style="display: block" id="placeN">@Model.Listing.Title</h5>

                <p class="reserve-description">@Model.Listing.Slogan</p>
            </div>
            <div class="col-md-6">
                <div class="reserve-seat-block align-items-center">
                    <div class="reserve-rating mx-0 mx-md-3">

                        @if (ViewBag.Rating == null)
                        {
                            <span>0</span>
                        }
                        else
                        {
                            <span>@ViewBag.Rating.ToString("F1")</span>
                        }


                    </div>

                </div>
            </div>
        </div>
    </div>
</section>

<!--//END RESERVE A SEAT -->
<!--============================= BOOKING DETAILS =============================-->

<section class="gray-dark booking-details_wrap">
    <div class="container">
        <div class="row">
            <div class="col-md-8 responsive-wrap">
                <div class="booking-checkbox_wrap">
                    <div class="booking-checkbox">
                        @Html.Raw(Model.Listing.Description)
                        <hr>
                    </div>
                    <div class="row">


                        <div class="col-md-4">
                            @foreach (var item in Model.ListServices.OrderBy(x => x.ServiceId).Take(2))
                            {
                                <label class="custom-checkbox">
                                    <span class="ti-check-box"></span>
                                    <span class="custom-control-description">@item.Service.Name</span>
                                </label><br />
                            }


                        </div>
                        <div class="col-md-4">
                            @foreach (var item in Model.ListServices.OrderBy(x => x.ServiceId).Skip(2).Take(2))
                            {
                                <label class="custom-checkbox">
                                    <span class="ti-check-box"></span>
                                    <span class="custom-control-description">@item.Service.Name</span>
                                </label><br />
                            }

                        </div>
                        <div class="col-md-4">
                            @foreach (var item in Model.ListServices.OrderBy(x => x.ServiceId).Skip(4).Take(2))
                            {
                                <label class="custom-checkbox">
                                    <span class="ti-check-box"></span>
                                    <span class="custom-control-description">@item.Service.Name</span>
                                </label><br />
                            }

                        </div>
                        <div class="col-md-4">
                            @foreach (var item in Model.ListServices.OrderBy(x => x.ServiceId).Skip(6).Take(2))
                            {
                                <label class="custom-checkbox">
                                    <span class="ti-check-box"></span>
                                    <span class="custom-control-description">@item.Service.Name</span>
                                </label><br />
                            }

                        </div>
                        <div class="col-md-4">
                            @foreach (var item in Model.ListServices.OrderBy(x => x.ServiceId).Skip(8).Take(2))
                            {
                                <label class="custom-checkbox">
                                    <span class="ti-check-box"></span>
                                    <span class="custom-control-description">@item.Service.Name</span>
                                </label><br />
                            }

                        </div>
                        <div class="col-md-4">
                            @foreach (var item in Model.ListServices.OrderBy(x => x.ServiceId).Skip(10).Take(2))
                            {
                                <label class="custom-checkbox">
                                    <span class="ti-check-box"></span>
                                    <span class="custom-control-description">@item.Service.Name</span>
                                </label><br />
                            }

                        </div>
                    </div>
                </div>
                @*Commet yazilan hisse *@
                <div class="booking-checkbox_wrap booking-your-review">
                    <h5>Write a Review</h5>
                    <hr>
                    <div class="customer-review_wrap">
                        <div class="customer-img">
                            @if (Model.Listing.User.Photo == null)
                            {
                                <img src="/Public/images/avatar.jpg" class="img-fluid" alt="avatar.jpg">
                            }
                            else
                            {
                                <img src="/Public/images/UserPhoto/@Model.Listing.User.Photo" class="img-fluid" alt="Model.Listing.User.Photo">
                            }
                            @if (Session["userName"] != null)
                            {
                                <p>@Session["userName"]</p>
                            }



                        </div>
                        <form action="@Url.Action("Commet", "SearchPlace")" method="post" enctype="multipart/form-data" id="commentForm">
                            <input type="hidden" value="@Model.Listing.Id" name="id" />
                            <div class="customer-content-wrap">
                                <div class="your-rating-wraps">

                                    <div class="your-rating-wrap">
                                        <span>Your rating</span>
                                        <div class="customer-review">
                                            <div class="my-rating" id="rating">

                                            </div>
                                            <input type="hidden" id="rateval" name="Rating" value="" />
                                        </div>
                                    </div>
                                </div>
                                <div class="your-comment-wrap">
                                    <textarea name="Text" class="your-rating-content" placeholder="Enter Your Comments" maxlength="140" data-validation="length" data-validation-length="max140" data-validation-error-msg-length="140 simvoldan artıq istifadə etməyin" data-validation="required" data-validation-error-msg="Comment bildirin!"></textarea>
                                    <h6 class="your-rating-notify">at least 140 characters</h6>
                                </div>

                                <div class="row">
                                    <div class="col-md-4 mr-auto">
                                        <div class="add-photos-link mb-3 mb-md-0">

                                            <input type="file" name="Photo" multiple="multiple" id="filePhoto"
                                                   data-validation="mime size"
                                                   data-validation-allowing="jpg, png, gif, jpeg"
                                                   data-validation-max-size="2M"
                                                   data-validation-error-msg-size="2 Mb-dan artıq şəkil yükləməyin"
                                                   data-validation-error-msg-mime="Ancaq .jpeg, .jpg, .png, .gif formatında şəkil yükləyin" />

                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="your-rating-btn">
                                            <button type="submit" id="commentButton" class="btn btn-danger btn-block">Publish Review</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </form>

                    </div>
                </div>
                <div class="booking-checkbox_wrap my-4">
                    <h4>Comments</h4>
                    <hr>
                    @foreach (var item in Model.Comments)
                    {
                        <div class="customer-review_wrap">
                            <div class="customer-img">
                                @if (@item.User.Photo == null)
                                {
                                    <img src="/Public/images/avatar.jpg" class="img-fluid" alt="avatar.jpg">
                                }
                                else
                                {
                                    <img src="/Public/images/UserPhoto/@item.User.Photo" class="img-fluid" alt="@item.User.Photo">
                                }

                                <p>@item.User.FullName</p>

                            </div>
                            <div class="customer-content-wrap">
                                <div class="customer-content">
                                    <div class="customer-review">
                                        @for (int i = 0; i < @item.Rating / 2; i++)
                                        {
                                            <span></span>
                                        }
                                        @*@if (item.Rating / 2 != 5)
                {
                    <span class="round-icon-blank"></span>
                }*@



                                        @{ TimeSpan s = DateTime.Now.Subtract(item.Time);}
                                        @if (s.TotalDays < 1 && item.Time.Year == DateTime.Now.Year && item.Time.Month == DateTime.Now.Month)
                                        {
                                            <p> @item.Time.ToString("HH:mm:ss")</p>

                                        }
                                        else if (s.TotalDays >= 1 && s.TotalDays < 2 && item.Time.Year == DateTime.Now.Year && item.Time.Month == DateTime.Now.Month)
                                        {
                                            <p>1 gün əvvvəl </p>
                                        }
                                        else if (s.TotalDays > 2 && s.TotalDays < 3 && item.Time.Year == DateTime.Now.Year && item.Time.Month == DateTime.Now.Month)
                                        {
                                            <p> 2 gün əvvvəl</p>
                                        }
                                        else if (s.TotalDays > 3 && s.TotalDays < 4 && item.Time.Year == DateTime.Now.Year && item.Time.Month == DateTime.Now.Month)
                                        {
                                            <p> 3 gün əvvvəl</p>
                                        }
                                        else
                                        {
                                            <p>  @item.Time.ToString("HH:mm:ss dd/MMM/yyyy")</p>

                                        }

                                    </div>
                                    <div class="customer-rating">@item.Rating</div>
                                </div>
                                <p class="customer-text">
                                    @item.Text
                                </p>
                                <ul>

                                    @foreach (var photo in item.CommentPhotos)
                                    {
                                        if (photo.Photo != null)
                                        {
                                            <li><img src="/Public/images/CommentPhoto/@photo.Photo" class="img-fluid" alt="@photo.Photo"></li>
                                        }

                                    }

                                </ul>
                                @if (Session["Login"] != null)
                                {
                                    //start

                                    <p>@item.Reactions.Where(x => x.CommentId == item.Id && x.Like == 1).Count() people rewiew as helpful</p>
                                    <p>@item.Reactions.Where(x => x.CommentId == item.Id && x.Like == 2).Count() people rewiew as bullshit</p>

                                    <button type="button" id="helpful" class="helpful @if (Session["user"]!=null)
                                                                         {
                                      if (item.Reactions.Where(x => x.UserId == (int)Session["user"]).FirstOrDefault()!=null)
                                                                                      {
                                      if (item.Reactions.Where(x => x.UserId == (int)Session["user"]).FirstOrDefault().Like==1)
                                                                                          {
                                                                                              @:hgreen
                                                                                          }

                                                                                      }
                                                                                  }   " data-id="@item.Id">
                                        <span class="icon-like"></span>Helpful
                                    </button>
                                    <button type="button" id="unhelpful" class="unhelpful @if (Session["user"]!=null)
                                                                                      {
                                                                                          if (item.Reactions.Where(x => x.UserId == (int)Session["user"]).FirstOrDefault()!=null)
                                                                                          {
                                                                                              if (item.Reactions.Where(x => x.UserId == (int)Session["user"]).FirstOrDefault().Like==2)
                                                                                              {
                                                                                                  @:uhred
                                                                                              }

                                                                                          }
                                                                                      }" data-id="@item.Id">
                                        <span class="icon-like"></span>Unhelpful
                                    </button>

                                    //end
                                }


                            </div>
                        </div>
                        <hr>
                    }

                </div>
            </div>
            <div class="col-md-4 responsive-wrap">
                <div class="contact-info">
                    <div id="map" style="height: 300px;width: 350px" data-lat="@Model.Listing.Lat" data-lon="@Model.Listing.Lng" data-zoom="13"></div>
                    <div class="address">
                        <span class="icon-location-pin"></span>
                        <p> @Model.Listing.City.Name<br> @Model.Listing.Address<br> </p>
                    </div>
                    <div class="address">
                        <span class="icon-screen-smartphone"></span>
                        <p> @Model.Listing.Phone</p>
                    </div>
                    <div class="address">
                        <span class="icon-link"></span>
                        <a href="@Model.Listing.Website" style="margin-left: 18px">
                            @Model.Listing.Website
                        </a>

                    </div>
                    <div class="address" style="height: 33px">
                        <span class="icon-clock"></span>
                        @foreach (var hour in Model.Listing.WorkHourses.ToList())
                        {

                            DateTime dt1 = DateTime.ParseExact(@hour.OpenHour.ToString(), "HH:mm:ss", new DateTimeFormatInfo());
                            DateTime dt2 = DateTime.ParseExact(@hour.CloseHour.ToString(), "HH:mm:ss", new DateTimeFormatInfo());



                            if (@hour.WeekNo == DayOfWeek.Wednesday.ToString().ToLower())
                            {
                                if (@dt1.TimeOfDay < DateTime.Now.TimeOfDay && DateTime.Now.TimeOfDay < dt2.TimeOfDay)
                                {
                                    <span class="open-close_green" style="font-size: 15px;margin-left: 18px">Open Now </span>

                                }
                                else
                                {
                                    <span style="font-size: 15px;margin-left: 18px"> Closed Now </span>

                                }
                            }





                        }

                    </div>

                </div>

            </div>
        </div>
    </div>
</section>

<!--//END BOOKING DETAILS -->
@section css{
   
    <!-- Star Rating Icon -->
    <link href="~/Public/css/star-rating.min.css" rel="stylesheet" />
    <link href="~/Public/css/theme.min.css" rel="stylesheet" />
    <style>
        .navbar-collapse.collapse {
            display: flex !important;
        }

        .jq-stars {
            display: inline-block;
        }

        .jq-rating-label {
            font-size: 22px;
            display: inline-block;
            position: relative;
            vertical-align: top;
            font-family: helvetica, arial, verdana;
        }

        .jq-star {
            width: 100px;
            height: 100px;
            display: inline-block;
            cursor: pointer;
        }

        .jq-star-svg {
            padding-left: 3px;
            width: 100%;
            height: 100% ;
        }

        .jq-star:hover .fs-star-svg path {
        }

        .jq-star-svg path {
            /* stroke: #000; */
            stroke-linejoin: round;
        }

        /* un-used */
        .jq-shadow {
            -webkit-filter: drop-shadow( -2px -2px 2px #888 );
            filter: drop-shadow( -2px -2px 2px #888 );
        }
    </style>
}


@section scripts{
    <script>
      

        var swiper = new Swiper('.swiper-container',
            {
                slidesPerView: 3,
                slidesPerGroup: 3,
                loop: true,
                loopFillGroupWithBlank: true,
                pagination: {
                    el: '.swiper-pagination',
                    clickable: true,
                },
                navigation: {
                    nextEl: '.swiper-button-next',
                    prevEl: '.swiper-button-prev',
                },
            });
    </script>
    <script>
        if ($('.image-link').length) {
            $('.image-link').magnificPopup({
                type: 'image',
                gallery: {
                    enabled: true
                }
            });
        }
        if ($('.image-link2').length) {
            $('.image-link2').magnificPopup({
                type: 'image',
                gallery: {
                    enabled: true
                }
            });
        }
    </script>


    <script>
        $(document).ready(function () {

            //rating
            $(".my-rating").starRating({
                //useFullStars: true,
                totalStars: 5,
                setRating: 4,
                minRating: 0,
                disableAfterRate: false,
                initialRating: 0,
                strokeColor: '#894A00',
                hoverColor:'#46cd38',
                ratedColor: '#ff4b00',
                strokeWidth: 10,
                starSize: 30,
                useGradient: true,
               
                callback: function (currentRating, $el) {
                    $("#rateval").val(currentRating);
                    console.log($("#rateval").val());
                }
            });




            //map
            var maplat = $('#map').data('lat');
            var maplon = $('#map').data('lon');
            var mapzoom = $('#map').data('zoom');
            var title = $("#placeN").text();


            var map;

            function initMap() {
                map = new google.maps.Map(document.getElementById('map'),
                    {
                        center: { lat: maplat, lng: maplon },
                        zoom: mapzoom
                    });


            }

            initMap();
            mark();

            function mark() {
                var marker = new google.maps.Marker({
                    position: { lat: maplat, lng: maplon },
                    title: title,
                    animation: google.maps.Animation.DROP,
                    draggable: false,
                    map: map
                });
            }



            //like

            $(document).on("click", "#helpful", function () {
                var CommentId = Number($(this).data("id"));


                var IsAdd;

                //start



                if (!$(this).hasClass("hgreen")) {
                    $(this).siblings().each(function () {
                        if ($(this).hasClass("unhelpful")) {
                            $(this).removeClass("uhred");
                        }
                    });

                    IsAdd = true;
                    $(this).addClass("hgreen");
                    $.ajax({
                        url: "/SearchPlace/Hcomment",
                        type: 'post',
                        dataType: 'json',
                        data: { CommentId, IsAdd },

                        success: function (data) {
                            if (data.status === 401) {
                                toastr["warning"](data.message);
                            }

                        }


                    });
                }

                else {
                    $(this).removeClass("hgreen");

                    $(this).siblings().each(function () {
                        if ($(this).hasClass("unhelpful")) {
                            $(this).removeClass("uhred");
                        }
                    });
                    $(".unhelpful").each(function (index, item) {
                        if ($(".unhelpful").data("id") == $(this).data("id")) {

                            $('.unhelpful:eq(' + index + ')').removeClass("uhred");
                        }
                    });
                    console.log("here");
                    IsAdd = false;
                    $.ajax({
                        url: "/SearchPlace/Hcomment",
                        type: 'post',
                        dataType: 'json',
                        data: { CommentId, IsAdd },

                        success: function (data) {
                            if (data.status === 401) {
                                toastr["warning"](data.message);
                            }
                        }


                    });


                }


                location.reload();


                //end









            });
            $(document).on("click", "#unhelpful", function () {
                var CommentId = Number($(this).data("id"));


                var IsAdd;


                //start
                if (!$(this).hasClass("uhred")) {
                    $(this).siblings().each(function () {
                        if ($(this).hasClass("helpful")) {
                            $(this).removeClass("hgreen");
                        }
                    });
                    $(".helpful").each(function (index, item) {
                        if ($(".helpful").data("id") == $(this).data("id")) {
                            console.log(index);
                            $(this).removeClass("hgreen");
                        }
                    });
                    IsAdd = true;
                    $(this).addClass("uhred");
                    $.ajax({
                        url: "/SearchPlace/Uhcomment",
                        type: 'post',
                        dataType: 'json',
                        data: { CommentId, IsAdd },

                        success: function (data) {
                            if (data.status === 401) {
                                toastr["warning"](data.message);
                            }
                        }


                    });
                }

                else {
                    $(this).siblings().each(function () {
                        if ($(this).hasClass("helpful")) {
                            $(this).removeClass("hgreen");
                        }
                    });
                    $(this).removeClass("uhred");
                    $(".helpful").each(function (index, item) {
                        if ($(".helpful").data("id") == $(this).data("id")) {

                            $(this).removeClass("hgreen");
                        }
                    });

                    IsAdd = false;
                    $.ajax({
                        url: "/SearchPlace/Uhcomment",
                        type: 'post',
                        dataType: 'json',
                        data: { CommentId, IsAdd },

                        success: function (data) {
                            if (data.status === 401) {
                                toastr["warning"](data.message);
                            }
                        }


                    });


                }


                location.reload();
                //end





            });




            //comment add

            $("#commentForm").submit(function push(ev) {
                ev.preventDefault();

                //from ajax submit

                var formdata = new FormData(); //FormData object
                var files = $("#filePhoto").get(0).files;
                //Iterating through each files selected in fileInput
                for (var i = 0; i < files.length; i++) {
                    //Appending each file to FormData object

                    formdata.append(files[i].name, files[i]);
                }

                $.ajax({
                    url: $(this).attr("action"),
                    type: $(this).attr("method"),
                    data: new FormData(this),
                    traditional: true,
                    dataType: "json",
                    cache: false,
                    contentType: false,
                    processData: false,
                    success: function (response) {
                        console.log(response);
                        if (response.status === 401) {
                            toastr["warning"](response.message);
                            setInterval(function () { $('#ModalLogReg').modal('show'); }, 1000);

                        }
                        if (response.status === 404) {
                            toastr["warning"](response.message);
                        }
                        if (response.status === 200) {

                            toastr["success"](response.message);
                            setInterval(function () { window.location = response.url; }, 1000);
                        }

                    },
                    error: function (xhr, error, status) {
                        console.log(error, status);
                        toastr["error"]("Rating və ya comment yazmamısınız");
                    }
                });




            });



            toastr.options = {
                "closeButton": false,
                "debug": false,
                "newestOnTop": false,
                "progressBar": false,
                "positionClass": "toast-top-right",
                "preventDuplicates": false,
                "onclick": null,
                "showDuration": "500",
                "hideDuration": "1000",
                "timeOut": "5000",
                "extendedTimeOut": "1000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            }

        });
        //rating
        $(document).on('ready',
            function () {
                $('#input-1').rating();
            });
        $(document).on('ready', function () {
            $("#input-1").rating().on("rating:clear", function () {
                alert("Your rating is reset");
            }).on("rating:change", function (event, value, caption) {
                alert("You rated: " + value + " = " + $(caption).text());
            });
        });

    </script>



}